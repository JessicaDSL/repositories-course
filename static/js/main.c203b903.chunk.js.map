{"version":3,"sources":["components/Container/index.js","pages/Main/styles.js","services/api.js","pages/Main/index.js","pages/Repository/styles.js","pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["Container","styled","div","Form","form","rotate","keyframes","SubmitButton","button","attrs","props","type","disabled","loading","css","List","ul","api","axios","create","baseURL","Main","state","newRepo","repositories","handleInputChange","e","setState","target","value","handleSubmit","a","preventDefault","get","response","data","name","full_name","localStorage","getItem","this","JSON","parse","_","prevState","setItem","stringify","onSubmit","placeholder","onChange","color","size","map","repository","key","to","encodeURIComponent","Component","Loading","Owner","header","IssueList","Repository","issues","match","repoName","decodeURIComponent","params","Promise","all","per_page","src","owner","avatar_url","alt","login","description","issue","String","id","user","href","html_url","title","labels","label","Routes","basename","process","path","exact","component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c203b903.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.div`\n    max-width: 700px;\n    background: #fff;\n    border-radius: 4px;\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n    padding: 30px;\n    margin: 80px auto;\n\n    h1 {\n        font-size: 20px;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n\n        svg {\n            margin-right: 10px;\n        }\n    }\n`;\n\n\nexport default Container;\n","import styled, { keyframes, css } from 'styled-components';\n\n\n\n\n\n\nexport const Form = styled.form`\n    margin-top: 30px;\n    display: flex;\n    flex-direction: row;\n\n    input {\n        flex: 1;\n        border: 1px solid #eee;\n        padding: 10px 15px;\n        border-radius: 4px;\n        font-size: 16px\n    }\n`\n\nconst rotate = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n`\n\nexport const SubmitButton = styled.button.attrs(props => ({\n    type: 'submit',\n    disabled: props.loading,\n}))`\n    background: #7159c1;\n    border: 0;\n    padding: 0 15px;\n    margin-left: 10px;\n    border-radius: 4px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &[disabled] {\n        cursor: not-allowed;\n        opacity: 0.6;\n    }\n\n    ${props =>\n        props.loading &&\n        css`\n            svg {\n                animation: ${rotate} 2s linear infinite;\n            }\n        `}\n`\nexport const List = styled.ul`\n    list-style: none;\n    margin-top: 30px;\n    li {\n        padding: 15px 0;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n\n    & + li { /*aplica em todos os li menos no primeiro*/\n        border-top: 1px solid #eee;\n    }\n\n    a {\n        color: #7159c1;\n        text-decoration: none;\n    }\n    }\n`\n","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://api.github.com' ,\n})\n\nexport default api;\n","import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\nimport api from '../../services/api';\n\n\nexport default class Main extends Component {\n    state = {\n        newRepo: '',\n        repositories: [],\n        loading: false,\n    };\n\n    //carregar os dados do localStorage\n    componentDidMount() {\n        const repositories = localStorage.getItem('repositories');\n\n        if(repositories) {\n            this.setState({ repositories: JSON.parse(repositories)});\n        }\n    }\n\n    //salvar os dados no localStorage\n    componentDidUpdate(_, prevState) {\n        const { repositories } = this.state;\n\n        if(prevState.repositories !== repositories) {\n            localStorage.setItem('repositories', JSON.stringify(repositories));\n        }\n    }\n\n    handleInputChange = e => {\n        this.setState({ newRepo: e.target.value });\n    };\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n        this.setState({ loading: true })\n\n        const { newRepo, repositories } = this.state;\n\n        const response = await api.get(`/repos/${newRepo}`);;\n\n        const data = {\n            name: response.data.full_name,\n        };\n\n        this.setState({\n            repositories: [...repositories, data],\n            newRepo: '',\n            loading: false,\n        })\n\n    };\n\n    render() {\n        const { newRepo, repositories, loading } = this.state;\n\n        return (\n            <Container>\n                <h1>\n                    <FaGithubAlt />\n                    Repositórios:\n                </h1>\n\n                <Form onSubmit={this.handleSubmit}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Adicionar repositório\"\n                        value={newRepo}\n                        onChange={this.handleInputChange}\n                    />\n\n                    <SubmitButton loading={loading}>\n                        {loading ? (<FaSpinner color=\"#FFF\" size={14}/>) : (\n                        <FaPlus color=\"FFF\" size={14}/>\n                        )}\n                    </SubmitButton>\n                </Form>\n\n                <List>\n                    {repositories.map(repository => (\n                        <li key={repository.name}>\n                            <span>{repository.name}</span>\n                            <Link to={`/repository/${encodeURIComponent(repository.name)}`}>Detalhes</Link>\n                        </li>\n                    ))}\n                </List>\n            </Container>\n        );\n    }\n}\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n    color: #fff;\n    font-size: 30px;\n    font-weight: bold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n`;\n\nexport const Owner = styled.header`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    a{\n        color: #7159c1;\n        font-size: 16px;\n        text-decoration: none;\n    }\n\n    img {\n        width: 120px;\n        border-radius: 50%;\n        margin-top: 20px;\n    }\n\n    h1 {\n        font-size: 24px;\n        margin-top: 10px;\n    }\n\n    p{\n        margin-top: 5px;\n        font-size: 12px;\n        color: #666;\n        line-height: 1.4;\n        text-align: center;\n        max-width: 400px;\n    }\n`\n\nexport const IssueList = styled.ul`\n    padding-top: 30px;\n    margin-top: 30px;\n    border-top: 1px solid #eee;\n    list-style: none;\n\n    li {\n        display: flex;\n        padding: 15px 10px;\n        border: 1px solid #eee;\n        border-radius: 4px;\n\n        & + li {\n            margin-top: 10px;\n        }\n\n        img {\n            width: 60px;\n            height: 60px;\n            border-radius: 50%;\n            border: 2px solid #eee;\n        }\n\n        div {\n            flex: 1;\n            margin-left: 15px;\n\n            strong {\n                font-size: 16px;\n\n                a {\n                    text-decoration: none;\n                    color: #333;\n                    &:hover {\n                        color: #7159c1;\n                    }\n                }\n                span {\n                    background: #eee;\n                    color: #333;\n                    border-radius: 2px;\n                    font-size: 12px;\n                    font-weight: 600;\n                    height: 20px;\n                    padding: 3px 4px;\n                    margin-left: 10px;\n                }\n\n            }\n\n            p {\n                margin-top: 5px;\n                font-size: 12px;\n                color: #999;\n            }\n        }\n    }\n`\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\nimport { Link } from 'react-router-dom';\n\nimport Container from '../../components/Container';\nimport { Loading, Owner, IssueList } from './styles';\n\n\nexport default class Repository extends Component {\n    static propTypes = {\n        match: PropTypes.shape({\n            params: PropTypes.shape({\n                repository: PropTypes.string,\n            }),\n        }).isRequired,\n    };\n\n    state = {\n        repository: {},\n        issues: [],\n        loading: true,\n    };\n\n\n    async componentDidMount() {\n        const { match } = this.props;\n\n        const repoName = decodeURIComponent(match.params.repository);\n\n        //api.github.com/repos/rocketseat/unform\n\n        const [repository, issues] = await Promise.all([\n            api.get(`/repos/${repoName}`),\n            api.get(`/repos/${repoName}/issues`, {\n                params: {\n                    state: 'open',\n                    per_page: 5,\n                },\n            }),\n        ]);\n\n        this.setState({\n            repository: repository.data,\n            issues: issues.data,\n            loading: false,\n        })\n    }\n\n\n    render() {\n        const { repository, issues, loading } = this.state;\n\n        if(loading) {\n            return <Loading>Carregando...</Loading>\n        }\n\n        return(\n        <Container>\n            <Owner>\n                <Link to=\"/\">Voltar aos repositórios</Link>\n                <img src={repository.owner.avatar_url} alt={repository.owner.login}/>\n                <h1>{repository.name}</h1>\n                <p>{repository.description}</p>\n            </Owner>\n\n            <IssueList>\n                {issues.map(issue => (\n                    <li key={String(issue.id)}>\n                        <img src={issue.user.avatar_url} alt={issue.user.login}/>\n                        <div>\n                            <strong>\n                                <a href={issue.html_url}>{issue.title}</a>\n                                {issue.labels.map(label => (\n                                    <span key={String(label.id)}>{label.name}</span>\n                                ))}\n                            </strong>\n                            <p>{issue.user.login}</p>\n                        </div>\n                    </li>\n                ))}\n            </IssueList>\n        </Container>\n        );\n    }\n}\n\n\n\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Repository from './pages/Repository';\n\nexport default function Routes() {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/\" exact component={Main} />\n                <Route path=\"/repository/:repository\" component={Repository} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    *{\n        margin: 0;\n        padding: 0;\n        outline: 0;\n        box-sizing: border-box;\n    }\n\n    html, body, #root {\n        min-height:100%;\n    }\n\n    body {\n        background: #7159c1;\n        -webkit-font-smoothing: antialiased !important;\n    }\n\n    body, input, button {\n        color: #222;\n        font-size: 14px;\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\n    }\n\n    button {\n        cursor: pointer;\n    }\n`;\n;\n","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\n\nfunction App() {\n    return (\n        <>\n            <Routes />\n            <GlobalStyles />\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}